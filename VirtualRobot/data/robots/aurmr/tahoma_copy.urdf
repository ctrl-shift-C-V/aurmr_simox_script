<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from tahoma.xacro                   | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="tahoma">
  <link name="gripper_equilibrium_grasp"/>
  <joint name="gripper_base_link_gripper_equilibrium_grasp" type="fixed">
    <parent link="epick_end_effector"/>
    <child link="gripper_equilibrium_grasp"/>
    <origin rpy="0 0 0" xyz="0 0 0"/>
  </joint>
  <material name="blue_aluminum">
    <!-- more accurate but less pretty :) -->
    <!--color rgba=".14 .24 .31 1"/>
      <color rgba=".26 .44 .545 1"/-->
    <color rgba=".23 .42 .64 1"/>
  </material>
  <!--material name="guard">
      <color rgba="1 .97 .89 1"/>
    </material-->
  <!--material name="guard">
      <color rgba="1 .97 .89 1"/>
    </material-->
  <!--material name="guard">
      <color rgba="1 .97 .89 1"/>
    </material-->
  <!--material name="guard">
      <color rgba="1 .97 .89 1"/>
    </material-->
  
  <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e) or UR16e.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
  <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->
  <!-- links: main serial chain -->
  <!-- joints: main serial chain -->
  <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
  <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
  <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
  <!-- http://docs.ros.org/melodic/api/gazebo_plugins/html/group__GazeboRosVacuumGripper.html -->
  <gazebo>
    <plugin filename="libgazebo_ros_vacuum_gripper.so" name="gazebo_ros_vacuum_gripper">
      <robotNamespace>tahoma/epick</robotNamespace>
      <bodyName>epick_end_effector</bodyName>
      <topicName>grasping</topicName>
      <maxForce>20</maxForce>
      <maxDistance>0.03</maxDistance>
      <minDistance>0.01</minDistance>
    </plugin>
  </gazebo>
  <!-- Upper cameras -->
  <!-- Link is centered on the optical frames. Slight offset in Y direction to compensate -->
  <!-- Z=1.10 for on top of the top beam -->
  <!-- Z=0.80 for underneath the top beam -->
  <!-- Disabled until we know about manipulability in upper bins
    <link name="camera_upper_right_mount"/>
    <link name="camera_upper_left_mount"/>
    <joint name="stand_upright_camera_upper_left_mount_joint" type="fixed">
      <parent link="stand_upright"/>
      <child link="camera_upper_left_mount"/>

      <origin xyz="-.1 ${-0.0215 + (camera_baseline / 2)} 0.80"
              rpy="${pi / 2} ${radians(15)} ${-atan2((camera_baseline /2),camera_focal_depth)}"/>
    </joint>
    <joint name="stand_upright_camera_upper_right_mount_joint" type="fixed">
      <parent link="stand_upright"/>
      <child link="camera_upper_right_mount"/>
      <origin xyz="-.1 ${0.0215 + (-camera_baseline / 2)} 0.80"
              rpy="${pi / 2} ${radians(15)} ${atan2((camera_baseline /2),camera_focal_depth)}"/>
    </joint>
    -->
  <material name="black">
    <color rgba="0. 0. 0. 1"/>
  </material>
  <material name="dark_grey">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>
  <material name="grey">
    <color rgba="0.6 0.6 0.6 1"/>
  </material>
  <material name="white">
    <color rgba="0.9 0.9 0.9 1"/>
  </material>
</robot>
